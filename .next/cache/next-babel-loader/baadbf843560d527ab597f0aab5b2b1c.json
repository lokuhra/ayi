{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Head.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useContext, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Row from './Row';\nimport { Context } from '../../../Provider';\nimport { useToggle } from 'react-use';\nimport { makeStyles } from '@material-ui/core';\n\nvar HeadTable = function HeadTable(_ref) {\n  var isCardView = _ref.isCardView;\n\n  var _useContext = useContext(Context),\n      dispatch = _useContext.dispatch;\n\n  var _useToggle = useToggle(false),\n      _useToggle2 = _slicedToArray(_useToggle, 2),\n      checked = _useToggle2[0],\n      setChecked = _useToggle2[1];\n\n  var handleChangeValue = useCallback(function (id) {\n    dispatch({\n      type: 'ALL_CHECKS',\n      payload: id\n    });\n  }, [dispatch]);\n\n  var handleOnClick = function handleOnClick() {\n    setChecked();\n    handleChangeValue(!checked);\n  };\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      displayNone: {\n        display: 'none'\n      }\n    };\n  });\n  var classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    className: isCardView ? classes.displayNone : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    color: 'primary',\n    checked: checked,\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Periodo',\n    action: 'ORDER_TYPE',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 4,\n    title: 'Detalle',\n    action: 'ORDER_DETAIL',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Montos',\n    action: 'ORDER_AMOUNT',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Estado',\n    action: 'ORDER_DATE',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Row, {\n    size: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"ACCIONES\"));\n};\n\nvar MenuTitle = function MenuTitle(_ref2) {\n  var size = _ref2.size,\n      title = _ref2.title,\n      action = _ref2.action;\n\n  var _useContext2 = useContext(Context),\n      dispatch = _useContext2.dispatch;\n\n  var _useToggle3 = useToggle(true),\n      _useToggle4 = _slicedToArray(_useToggle3, 2),\n      bool = _useToggle4[0],\n      toggle = _useToggle4[1];\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      root: {\n        justifyContent: 'flex-start',\n        padding: 0\n      }\n    };\n  });\n  var handleChangeSort = useCallback(function (sort) {\n    dispatch({\n      type: action + sort,\n      payload: sort\n    });\n  }, [dispatch]);\n\n  var handleOnClickHeadTable = function handleOnClickHeadTable() {\n    toggle();\n    var sorType = !bool ? '_ASC' : '_DESC';\n    console.log(action + sorType);\n    handleChangeSort(sorType);\n  };\n\n  var classes = useStyles();\n  return __jsx(Row, {\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnClickHeadTable,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, title));\n};\n\nexport default HeadTable;","map":{"version":3,"sources":["/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Head.js"],"names":["React","useCallback","useContext","useState","Grid","Checkbox","Button","Row","Context","useToggle","makeStyles","HeadTable","isCardView","dispatch","checked","setChecked","handleChangeValue","id","type","payload","handleOnClick","useStyles","theme","displayNone","display","classes","MenuTitle","size","title","action","bool","toggle","root","justifyContent","padding","handleChangeSort","sort","handleOnClickHeadTable","sorType","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Row from './Row';\nimport { Context } from '../../../Provider';\nimport { useToggle } from 'react-use';\nimport { makeStyles } from '@material-ui/core';\n\nconst HeadTable = ({ isCardView }) => {\n  const { dispatch } = useContext(Context);\n\n  const [checked, setChecked] = useToggle(false);\n\n  const handleChangeValue = useCallback(\n    id => {\n      dispatch({\n        type: 'ALL_CHECKS',\n        payload: id\n      });\n    },\n    [dispatch]\n  );\n\n  const handleOnClick = () => {\n    setChecked();\n    handleChangeValue(!checked);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    displayNone: {\n      display: 'none'\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      className={isCardView ? classes.displayNone : ''}\n    >\n      <Grid item xs=\"auto\">\n        <Checkbox color={'primary'} checked={checked} onClick={handleOnClick} />\n      </Grid>\n      <MenuTitle size={2} title={'Periodo'} action={'ORDER_TYPE'} />\n      <MenuTitle size={4} title={'Detalle'} action={'ORDER_DETAIL'} />\n      <MenuTitle size={2} title={'Montos'} action={'ORDER_AMOUNT'} />\n      <MenuTitle size={2} title={'Estado'} action={'ORDER_DATE'} />\n      <Row size={1}>ACCIONES</Row>\n    </Grid>\n  );\n};\n\nconst MenuTitle = ({ size, title, action }) => {\n  const { dispatch } = useContext(Context);\n  const [bool, toggle] = useToggle(true);\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      justifyContent: 'flex-start',\n      padding: 0\n    }\n  }));\n\n  const handleChangeSort = useCallback(\n    sort => {\n      dispatch({\n        type: action + sort,\n        payload: sort\n      });\n    },\n    [dispatch]\n  );\n\n  const handleOnClickHeadTable = () => {\n    toggle();\n    const sorType = !bool ? '_ASC' : '_DESC';\n    console.log(action + sorType);\n    handleChangeSort(sorType);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Row size={size}>\n      <Button onClick={handleOnClickHeadTable} className={classes.root}>\n        {title}\n      </Button>\n    </Row>\n  );\n};\n\nexport default HeadTable;\n"]},"metadata":{},"sourceType":"module"}