{"ast":null,"code":"var _jsxFileName = \"/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Head.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useContext, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Row from './Row';\nimport { Context } from '../../../Provider';\nimport { useToggle } from 'react-use';\nimport { makeStyles } from '@material-ui/core';\n\nconst HeadTable = ({\n  isCardView\n}) => {\n  const {\n    dispatch\n  } = useContext(Context);\n  const [checked, setChecked] = useToggle(false);\n  const handleChangeValue = useCallback(id => {\n    dispatch({\n      type: 'ALL_CHECKS',\n      payload: id\n    });\n  }, [dispatch]);\n\n  const handleOnClick = () => {\n    setChecked();\n    handleChangeValue(!checked);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    displayNone: {\n      display: 'none'\n    }\n  }));\n  const classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    justify: \"space-between\",\n    className: isCardView ? classes.displayNone : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    color: 'primary',\n    checked: checked,\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Periodo',\n    action: 'ORDER_TYPE',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 4,\n    title: 'Detalle',\n    action: 'ORDER_DETAIL',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Montos',\n    action: 'ORDER_AMOUNT',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(MenuTitle, {\n    size: 2,\n    title: 'Estado',\n    action: 'ORDER_DATE',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), __jsx(Row, {\n    size: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"ACCIONES\"));\n};\n\nconst MenuTitle = ({\n  size,\n  title,\n  action\n}) => {\n  const {\n    dispatch\n  } = useContext(Context);\n  const [bool, toggle] = useToggle(true);\n  const useStyles = makeStyles(theme => ({\n    root: {\n      justifyContent: 'flex-start',\n      padding: 0\n    }\n  }));\n  const handleChangeSort = useCallback(sort => {\n    dispatch({\n      type: action + sort,\n      payload: sort\n    });\n  }, [dispatch]);\n\n  const handleOnClickHeadTable = () => {\n    toggle();\n    const sorType = !bool ? '_ASC' : '_DESC';\n    console.log(action + sorType);\n    handleChangeSort(sorType);\n  };\n\n  const classes = useStyles();\n  return __jsx(Row, {\n    size: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleOnClickHeadTable,\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, title));\n};\n\nexport default HeadTable;","map":{"version":3,"sources":["/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Head.js"],"names":["React","useCallback","useContext","useState","Grid","Checkbox","Button","Row","Context","useToggle","makeStyles","HeadTable","isCardView","dispatch","checked","setChecked","handleChangeValue","id","type","payload","handleOnClick","useStyles","theme","displayNone","display","classes","MenuTitle","size","title","action","bool","toggle","root","justifyContent","padding","handleChangeSort","sort","handleOnClickHeadTable","sorType","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Row from './Row';\nimport { Context } from '../../../Provider';\nimport { useToggle } from 'react-use';\nimport { makeStyles } from '@material-ui/core';\n\nconst HeadTable = ({ isCardView }) => {\n  const { dispatch } = useContext(Context);\n\n  const [checked, setChecked] = useToggle(false);\n\n  const handleChangeValue = useCallback(\n    id => {\n      dispatch({\n        type: 'ALL_CHECKS',\n        payload: id\n      });\n    },\n    [dispatch]\n  );\n\n  const handleOnClick = () => {\n    setChecked();\n    handleChangeValue(!checked);\n  };\n\n  const useStyles = makeStyles(theme => ({\n    displayNone: {\n      display: 'none'\n    }\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n      justify=\"space-between\"\n      className={isCardView ? classes.displayNone : ''}\n    >\n      <Grid item xs=\"auto\">\n        <Checkbox color={'primary'} checked={checked} onClick={handleOnClick} />\n      </Grid>\n      <MenuTitle size={2} title={'Periodo'} action={'ORDER_TYPE'} />\n      <MenuTitle size={4} title={'Detalle'} action={'ORDER_DETAIL'} />\n      <MenuTitle size={2} title={'Montos'} action={'ORDER_AMOUNT'} />\n      <MenuTitle size={2} title={'Estado'} action={'ORDER_DATE'} />\n      <Row size={1}>ACCIONES</Row>\n    </Grid>\n  );\n};\n\nconst MenuTitle = ({ size, title, action }) => {\n  const { dispatch } = useContext(Context);\n  const [bool, toggle] = useToggle(true);\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      justifyContent: 'flex-start',\n      padding: 0\n    }\n  }));\n\n  const handleChangeSort = useCallback(\n    sort => {\n      dispatch({\n        type: action + sort,\n        payload: sort\n      });\n    },\n    [dispatch]\n  );\n\n  const handleOnClickHeadTable = () => {\n    toggle();\n    const sorType = !bool ? '_ASC' : '_DESC';\n    console.log(action + sorType);\n    handleChangeSort(sorType);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Row size={size}>\n      <Button onClick={handleOnClickHeadTable} className={classes.root}>\n        {title}\n      </Button>\n    </Row>\n  );\n};\n\nexport default HeadTable;\n"]},"metadata":{},"sourceType":"module"}