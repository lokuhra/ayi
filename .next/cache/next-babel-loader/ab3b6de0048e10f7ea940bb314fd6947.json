{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Table.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useCallback, Fragment, useState } from 'react';\nimport HeadTable from './Head';\nimport Grid from '@material-ui/core/Grid';\nimport List from './List';\nimport { Context } from '../../../Provider';\nimport { makeStyles } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nvar Table = function Table(_ref) {\n  var isCardView = _ref.isCardView;\n\n  var _useContext = useContext(Context),\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(false),\n      snackBars = _useState[0],\n      setOpenSnackBars = _useState[1];\n\n  var handleCloseSnackBar = function handleCloseSnackBar(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpenSnackBars(false);\n  };\n\n  var handleChangeValue = useCallback(function (id) {\n    dispatch({\n      type: 'ON_CHECK',\n      payload: id\n    });\n  }, [dispatch]);\n  var handleOnClickPaid = useCallback(function (id, paid) {\n    paid ? setOpenSnackBars(true) : dispatch({\n      type: 'ON_PAID',\n      payload: id\n    });\n  }, [dispatch]);\n  return __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(HeadTable, {\n    isCardView: isCardView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), __jsx(List, {\n    onClickCheck: handleChangeValue,\n    isCardView: isCardView,\n    onClickPaid: handleOnClickPaid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: snackBars,\n    autoHideDuration: 3000,\n    onClose: handleCloseSnackBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(MySnackbarContentWrapper, {\n    onClose: handleCloseSnackBar,\n    variant: \"error\",\n    message: \"El pago se realizo con anterioridad.\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })));\n};\n\nfunction MySnackbarContentWrapper(props) {\n  var useStyles1 = makeStyles(function (theme) {\n    return {\n      error: {\n        backgroundColor: theme.palette.error.dark\n      },\n      info: {\n        backgroundColor: theme.palette.primary.main\n      },\n      icon: {\n        fontSize: 20\n      },\n      iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n      },\n      message: {\n        display: 'flex',\n        alignItems: 'center'\n      }\n    };\n  });\n  var classes = useStyles1();\n\n  var className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = ErrorIcon;\n  return __jsx(SnackbarContent, _extends({\n    className: clsx(classes[variant], className),\n    \"aria-describedby\": \"client-snackbar\",\n    message: __jsx(\"span\", {\n      id: \"client-snackbar\",\n      className: classes.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(Icon, {\n      className: clsx(classes.icon, classes.iconVariant),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), message),\n    action: [__jsx(IconButton, {\n      key: \"close\",\n      \"aria-label\": \"close\",\n      color: \"inherit\",\n      onClick: onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(CloseIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))]\n  }, other, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/lokuhra/dev/FRONTEND/src/components/Filters/Table/Settlements/Table.js"],"names":["React","useContext","useCallback","Fragment","useState","HeadTable","Grid","List","Context","makeStyles","ErrorIcon","SnackbarContent","clsx","IconButton","Snackbar","CloseIcon","Table","isCardView","dispatch","snackBars","setOpenSnackBars","handleCloseSnackBar","event","reason","handleChangeValue","id","type","payload","handleOnClickPaid","paid","vertical","horizontal","MySnackbarContentWrapper","props","useStyles1","theme","error","backgroundColor","palette","dark","info","primary","main","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","classes","className","onClose","variant","other","Icon"],"mappings":"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","sourcesContent":["import React, { useContext, useCallback, Fragment, useState } from 'react';\nimport HeadTable from './Head';\nimport Grid from '@material-ui/core/Grid';\nimport List from './List';\nimport { Context } from '../../../Provider';\nimport { makeStyles } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst Table = ({ isCardView }) => {\n  const { dispatch } = useContext(Context);\n\n    const [snackBars, setOpenSnackBars] = useState(false);\n\n    const handleCloseSnackBar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpenSnackBars(false);\n    };\n\n  const handleChangeValue = useCallback(\n    id => {\n      dispatch({\n        type: 'ON_CHECK',\n        payload: id\n      });\n    },\n    [dispatch]\n  );\n\n  const handleOnClickPaid = useCallback(\n    (id, paid) => {\n      paid ? setOpenSnackBars(true) :\n        dispatch({\n          type: 'ON_PAID',\n          payload: id\n        });\n    },\n    [dispatch]\n  );\n\n\n\n  return (\n    <Grid container alignItems=\"center\">\n      <HeadTable isCardView={isCardView} />\n      <List\n        onClickCheck={handleChangeValue}\n        isCardView={isCardView}\n        onClickPaid={handleOnClickPaid}\n      />\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right'\n        }}\n        open={snackBars}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackBar}\n      >\n        <MySnackbarContentWrapper\n          onClose={handleCloseSnackBar}\n          variant=\"error\"\n          message=\"El pago se realizo con anterioridad.\"\n        />\n      </Snackbar>\n    </Grid>\n  );\n};\n\nfunction MySnackbarContentWrapper(props) {\n  const useStyles1 = makeStyles(theme => ({\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }));\n\n  const classes = useStyles1();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = ErrorIcon;\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"close\"\n          color=\"inherit\"\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n      {...other}\n    />\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}