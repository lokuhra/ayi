{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/lokuhra/dev/FRONTEND/src/components/Provider/index.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer, useEffect, useRef, useMemo } from 'react';\nimport { curry, map, propEq, assoc, when, filter, where, equals, ascend, prop, descend, sort, pathSatisfies } from 'ramda';\nimport moment from 'moment';\nexport const Context = React.createContext();\nconst {\n  Provider\n} = Context;\nconst alter = curry((checked, id, items) => map(when(propEq('id', id), assoc('checked', checked)), items));\nconst alterPaid = curry((checked, id, items) => map(when(propEq('id', id), assoc('paid', checked)), items));\nconst alterDate = curry((checked, id, items) => map(when(propEq('id', id), assoc('paid_date', checked)), items));\n\nconst filterByID = i => filter(where({\n  id: equals(i)\n}));\n\nexport const filterByPaid = i => filter(where({\n  paid: equals(i)\n}));\n\nconst changeAllChecks = i => map(o => o.checked === !i ? assoc('checked', i, o) : o);\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case 'ON_PAID':\n      const newData = alterPaid(true, payload, state.last_movements);\n      return _objectSpread({}, state, {\n        last_movements: alterDate(moment().format('MM/DD/YYYY'), payload, newData)\n      });\n\n    case 'ON_CHECK':\n      return _objectSpread({}, state, {\n        last_movements: alter(!filterByID(payload)(state.last_movements)[0].checked, payload, state.last_movements)\n      });\n\n    case 'ALL_CHECKS':\n      return _objectSpread({}, state, {\n        last_movements: changeAllChecks(payload)(state.last_movements)\n      });\n\n    case 'ORDER_TYPE_ASC':\n      return _objectSpread({}, state, {\n        last_movements: sort(ascend(prop('type')))(state.last_movements)\n      });\n\n    case 'ORDER_TYPE_DESC':\n      return _objectSpread({}, state, {\n        last_movements: sort(descend(prop('type')))(state.last_movements)\n      });\n\n    case 'ORDER_DETAIL_ASC':\n      return _objectSpread({}, state, {\n        last_movements: sort(ascend(prop('client')))(state.last_movements)\n      });\n\n    case 'ORDER_DETAIL_DESC':\n      return _objectSpread({}, state, {\n        last_movements: sort(descend(prop('client')))(state.last_movements)\n      });\n\n    case 'ORDER_AMOUNT_ASC':\n      return _objectSpread({}, state, {\n        last_movements: sort(ascend(prop('amount')))(state.last_movements)\n      });\n\n    case 'ORDER_AMOUNT_DESC':\n      return _objectSpread({}, state, {\n        last_movements: sort(descend(prop('amount')))(state.last_movements)\n      });\n\n    case 'ORDER_DATE_ASC':\n      return _objectSpread({}, state, {\n        last_movements: sort(ascend(prop('date')))(state.last_movements)\n      });\n\n    case 'ORDER_DATE_DESC':\n      return _objectSpread({}, state, {\n        last_movements: sort(descend(prop('date')))(state.last_movements)\n      });\n\n    case 'FILTER_BY_SELECT':\n      console.log(payload);\n      return _objectSpread({}, state, {\n        last_movements: filter(pathSatisfies(equals(payload[0]), [payload[1]]))(state.last_movements)\n      });\n\n    default:\n      throw new Error(`Action type ${type} unknown`);\n  }\n};\n\nconst AppProvider = ({\n  children\n}) => {\n  console.log('Rendering <AppProvider />');\n  const initialState = {\n    last_movements: [{\n      period: \"2019/05-M\",\n      id: 4,\n      type: 'Realizaste un pago en farmacoins todas las farmacias.',\n      client: 'Luis Pasteur - Antitabaco',\n      clientID: 'Código: 210 ',\n      amount: '40.000,00',\n      paid_date: '04/09/2019',\n      checked: false,\n      paid: false\n    }, {\n      id: 5,\n      period: \"2019/05-M\",\n      type: 'Realizaste un pago en farmacoins todas las farmacias.',\n      client: 'Luis Pasteur - Antitabaco',\n      clientID: 'Código: 210 ',\n      amount: '50.000,00',\n      paid_date: '25/09/2019',\n      checked: false,\n      paid: true\n    }, {\n      id: 3,\n      period: \"2019/05-M\",\n      type: 'Realizaste un pago en farmacoins todas las farmacias.',\n      client: 'Luis Pasteur - Antitabaco',\n      clientID: 'Código: 210 ',\n      amount: '30.000,00',\n      paid_date: '03/09/2019',\n      checked: false,\n      paid: false\n    }, {\n      id: 2,\n      period: \"2019/05-M\",\n      type: 'Realizaste un pago en farmacoins todas las farmacias.',\n      client: 'Luis Pasteur - Antitabaco',\n      clientID: 'Código: 210 ',\n      amount: '30.000,00',\n      paid_date: '22/09/2019',\n      checked: false,\n      paid: false\n    }, {\n      id: 1,\n      period: \"2019/05-M\",\n      type: 'Realizaste un pago en farmacoins todas las farmacias.',\n      client: 'Luis Pasteur - Antitabaco',\n      clientID: 'Código: 210 ',\n      amount: '11.000,00',\n      paid_date: '01/09/2019',\n      checked: false,\n      paid: false\n    }]\n  };\n\n  function enchanceDispatchWithLogger(dispatch) {\n    return function (action) {\n      console.log('Action Type:', action.type);\n      return dispatch(action);\n    };\n  }\n\n  function useReducerWithLogger(...args) {\n    let prevState = useRef(initialState);\n    const {\n      0: state,\n      1: dispatch\n    } = useReducer(...args);\n    const dispatchWithLogger = useMemo(() => {\n      return enchanceDispatchWithLogger(dispatch);\n    }, [dispatch]);\n    useEffect(() => {\n      if (state !== initialState) {\n        console.log('Prev state: ', prevState.current);\n        console.log('Next state: ', state);\n      }\n\n      prevState.current = state;\n    }, [state]);\n    return [state, dispatchWithLogger];\n  }\n\n  const [state, dispatch] = useReducerWithLogger(reducer, initialState);\n  const value = {\n    state,\n    dispatch\n  };\n  return __jsx(Provider, {\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, children);\n};\n\nexport default AppProvider;","map":{"version":3,"sources":["/home/lokuhra/dev/FRONTEND/src/components/Provider/index.js"],"names":["React","useReducer","useEffect","useRef","useMemo","curry","map","propEq","assoc","when","filter","where","equals","ascend","prop","descend","sort","pathSatisfies","moment","Context","createContext","Provider","alter","checked","id","items","alterPaid","alterDate","filterByID","i","filterByPaid","paid","changeAllChecks","o","reducer","state","type","payload","newData","last_movements","format","console","log","Error","AppProvider","children","initialState","period","client","clientID","amount","paid_date","enchanceDispatchWithLogger","dispatch","action","useReducerWithLogger","args","prevState","dispatchWithLogger","current","value"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect, useRef, useMemo } from 'react';\nimport {\n  curry,\n  map,\n  propEq,\n  assoc,\n  when,\n  filter,\n  where,\n  equals,\n  ascend,\n  prop,\n  descend,\n  sort,\n  pathSatisfies\n} from 'ramda';\nimport moment from 'moment'\n\nexport const Context = React.createContext();\nconst { Provider } = Context;\n\nconst alter = curry((checked, id, items) =>\n  map(when(propEq('id', id), assoc('checked', checked)), items)\n);\n\nconst alterPaid = curry((checked, id, items) =>\n    map(when(propEq('id', id), assoc('paid', checked)), items)\n);\n\nconst alterDate = curry((checked, id, items) =>\n    map(when(propEq('id', id), assoc('paid_date', checked)), items)\n);\n\n\n\nconst filterByID = i => filter(where({ id: equals(i) }));\nexport const filterByPaid = (i) => filter(where({ paid: equals(i) }));\n\nconst changeAllChecks = i =>\n  map(o => (o.checked === !i ? assoc('checked', i, o) : o));\n\nconst reducer = (state, { type, payload }) => {\n  switch (type) {\n    case 'ON_PAID':\n      const newData = alterPaid(\n          true,\n          payload,\n          state.last_movements\n      )\n      return {\n        ...state,\n        last_movements: alterDate(\n            moment().format('MM/DD/YYYY'),\n            payload,\n            newData\n        )\n      };\n    case 'ON_CHECK':\n      return {\n        ...state,\n        last_movements: alter(\n          !filterByID(payload)(state.last_movements)[0].checked,\n          payload,\n          state.last_movements\n        )\n      };\n    case 'ALL_CHECKS':\n      return {\n        ...state,\n        last_movements: changeAllChecks(payload)(state.last_movements)\n      };\n    case 'ORDER_TYPE_ASC':\n      return {\n        ...state,\n        last_movements: sort(ascend(prop('type')))(state.last_movements)\n      };\n    case 'ORDER_TYPE_DESC':\n      return {\n        ...state,\n        last_movements: sort(descend(prop('type')))(state.last_movements)\n      };\n    case 'ORDER_DETAIL_ASC':\n      return {\n        ...state,\n        last_movements: sort(ascend(prop('client')))(state.last_movements)\n      };\n    case 'ORDER_DETAIL_DESC':\n      return {\n        ...state,\n        last_movements: sort(descend(prop('client')))(state.last_movements)\n      };\n    case 'ORDER_AMOUNT_ASC':\n      return {\n        ...state,\n        last_movements: sort(ascend(prop('amount')))(state.last_movements)\n      };\n    case 'ORDER_AMOUNT_DESC':\n      return {\n        ...state,\n        last_movements: sort(descend(prop('amount')))(state.last_movements)\n      };\n    case 'ORDER_DATE_ASC':\n      return {\n        ...state,\n        last_movements: sort(ascend(prop('date')))(state.last_movements)\n      };\n    case 'ORDER_DATE_DESC':\n      return {\n        ...state,\n        last_movements: sort(descend(prop('date')))(state.last_movements)\n      };\n    case 'FILTER_BY_SELECT':\n      console.log(payload);\n      return {\n        ...state,\n        last_movements: filter(pathSatisfies(equals(payload[0]), [payload[1]]))(\n          state.last_movements\n        )\n      };\n\n    default:\n      throw new Error(`Action type ${type} unknown`);\n  }\n};\n\nconst AppProvider = ({ children }) => {\n  console.log('Rendering <AppProvider />');\n  const initialState = {\n    last_movements: [\n      {\n        period:\"2019/05-M\",\n        id: 4,\n        type: 'Realizaste un pago en farmacoins todas las farmacias.',\n        client: 'Luis Pasteur - Antitabaco',\n        clientID: 'Código: 210 ',\n        amount: '40.000,00',\n        paid_date: '04/09/2019',\n        checked: false,\n        paid: false,\n      },\n      {\n        id: 5,\n        period:\"2019/05-M\",\n        type: 'Realizaste un pago en farmacoins todas las farmacias.',\n        client: 'Luis Pasteur - Antitabaco',\n        clientID: 'Código: 210 ',\n        amount: '50.000,00',\n        paid_date: '25/09/2019',\n        checked: false,\n        paid: true,\n      },\n      {\n        id: 3,\n        period:\"2019/05-M\",\n        type: 'Realizaste un pago en farmacoins todas las farmacias.',\n        client: 'Luis Pasteur - Antitabaco',\n        clientID: 'Código: 210 ',\n        amount: '30.000,00',\n        paid_date: '03/09/2019',\n        checked: false,\n        paid: false,\n      },\n      {\n        id: 2,\n        period:\"2019/05-M\",\n        type: 'Realizaste un pago en farmacoins todas las farmacias.',\n        client: 'Luis Pasteur - Antitabaco',\n        clientID: 'Código: 210 ',\n        amount: '30.000,00',\n        paid_date: '22/09/2019',\n        checked: false,\n        paid: false,\n      },\n      {\n        id: 1,\n        period:\"2019/05-M\",\n        type: 'Realizaste un pago en farmacoins todas las farmacias.',\n        client: 'Luis Pasteur - Antitabaco',\n        clientID: 'Código: 210 ',\n        amount: '11.000,00',\n        paid_date: '01/09/2019',\n        checked: false,\n        paid: false,\n      }\n    ]\n  };\n\n  function enchanceDispatchWithLogger(dispatch) {\n    return function(action) {\n      console.log('Action Type:', action.type);\n      return dispatch(action);\n    };\n  }\n\n  function useReducerWithLogger(...args) {\n    let prevState = useRef(initialState);\n    const [state, dispatch] = useReducer(...args);\n\n    const dispatchWithLogger = useMemo(() => {\n      return enchanceDispatchWithLogger(dispatch);\n    }, [dispatch]);\n\n    useEffect(() => {\n      if (state !== initialState) {\n        console.log('Prev state: ', prevState.current);\n        console.log('Next state: ', state);\n      }\n      prevState.current = state;\n    }, [state]);\n\n    return [state, dispatchWithLogger];\n  }\n\n  const [state, dispatch] = useReducerWithLogger(reducer, initialState);\n\n  const value = { state, dispatch };\n\n  return <Provider value={value}>{children}</Provider>;\n};\n\nexport default AppProvider;\n"]},"metadata":{},"sourceType":"module"}